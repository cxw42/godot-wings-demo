[gd_scene load_steps=33 format=3 uid="uid://dv0180t8hngpc"]

[ext_resource type="Texture2D" uid="uid://b17wt83q0xefi" path="res://icon.svg" id="1_o6vgj"]

[sub_resource type="GDScript" id="GDScript_fifn5"]
resource_name = "top_node.gd"
script/source = "extends Node3D
@onready var b: RigidBody3D = $B
@onready var target_angle_readout: Label = $HUD/Control/VBoxContainer/HBoxContainer/TargetAngleReadout

func _unhandled_input(event: InputEvent) -> void:
    if event.is_action_pressed(\"ui_cancel\"):
        get_tree().quit()


func _on_desired_angle_changed(value: float) -> void:
    b.desired_angle = value
    target_angle_readout.text = \"%.f\" % value
"

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_o6vgj"]
albedo_color = Color(0, 0, 1, 1)

[sub_resource type="PrismMesh" id="PrismMesh_fifn5"]
material = SubResource("StandardMaterial3D_o6vgj")
size = Vector3(5, 10, 0.1)

[sub_resource type="WorldBoundaryShape3D" id="WorldBoundaryShape3D_ic01r"]

[sub_resource type="BoxMesh" id="BoxMesh_o6vgj"]
size = Vector3(40, 1, 40)

[sub_resource type="GDScript" id="GDScript_o6vgj"]
resource_name = "character_body_3d.gd"
script/source = "extends CharacterBody3D


const SPEED = 5.0
const JUMP_VELOCITY = 4.5


func _physics_process(delta: float) -> void:
    # Add the gravity.
    if not is_on_floor():
        velocity += get_gravity() * delta

    # Handle jump.
    if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
        velocity.y = JUMP_VELOCITY

    # Get the input direction and handle the movement/deceleration.
    # As good practice, you should replace UI actions with custom gameplay actions.
    var input_dir := Input.get_vector(\"ui_left\", \"ui_right\", \"ui_up\", \"ui_down\")
    var direction := (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
    if direction:
        velocity.x = direction.x * SPEED
        velocity.z = direction.z * SPEED
    else:
        velocity.x = move_toward(velocity.x, 0, SPEED)
        velocity.z = move_toward(velocity.z, 0, SPEED)

    move_and_slide()
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_fifn5"]

[sub_resource type="PhysicsMaterial" id="PhysicsMaterial_o6vgj"]

[sub_resource type="BoxShape3D" id="BoxShape3D_fifn5"]
size = Vector3(1, 7, 1)

[sub_resource type="BoxMesh" id="BoxMesh_oc6vn"]
size = Vector3(1, 7, 1)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_afxlr"]
albedo_color = Color(0.419813, 0.419813, 0.419813, 1)

[sub_resource type="PhysicsMaterial" id="PhysicsMaterial_fifn5"]

[sub_resource type="GDScript" id="GDScript_afxlr"]
resource_name = "beam_b"
script/source = "## Beam B
extends RigidBody3D

@onready var a_to_b: HingeJoint3D = $\"../A to B\"

@onready var angle_label: Label = $\"../HUD/Control/VBoxContainer/AngleLabel\"

@export var Kp: float = 100

@export var desired_angle: float = 0 ## degrees from X towards Y

@export var y_force_min: float = 100
@export var y_force_max: float = 450
@export var y_freq = 0.05

func _integrate_forces(state: PhysicsDirectBodyState3D) -> void:
    # Get current angle w.r.t a_to_b
    var base_to_center = (global_position - a_to_b.global_position).normalized()
    var angle = rad_to_deg(atan2(base_to_center.y, base_to_center.x))
    angle_label.text = \"%.f\" % angle
    var difference = desired_angle - angle
    var force = Kp*difference
    # var force = sin(2*PI*y_freq*Time.get_ticks_msec()/1000)
    # force = remap(force, -1, 1, y_force_min, y_force_max)
    #print(force)
    var direction = -transform.basis.x # global_transform * (Vector3(0,1,1).normalized())
    state.apply_central_force(force * direction)
    %Arrow.global_transform = Transform3D().rotated(Vector3(0,0,-1), direction.angle_to(Vector3(0,1,0)))
"

[sub_resource type="BoxMesh" id="BoxMesh_sfd0x"]
size = Vector3(1, 5, 1)

[sub_resource type="BoxShape3D" id="BoxShape3D_h11p4"]
size = Vector3(1, 5, 1)

[sub_resource type="BoxMesh" id="BoxMesh_o6dvp"]
size = Vector3(1, 10, 1)

[sub_resource type="BoxShape3D" id="BoxShape3D_st5u5"]
size = Vector3(1, 10, 1)

[sub_resource type="BoxMesh" id="BoxMesh_afxlr"]
size = Vector3(1, 11.75, 1)

[sub_resource type="BoxShape3D" id="BoxShape3D_sfd0x"]
size = Vector3(1, 11.75, 1)

[sub_resource type="BoxMesh" id="BoxMesh_h11p4"]
size = Vector3(1, 7.5, 1)

[sub_resource type="BoxShape3D" id="BoxShape3D_o6dvp"]
size = Vector3(1, 7.5, 1)

[sub_resource type="BoxMesh" id="BoxMesh_st5u5"]
size = Vector3(1, 14.5, 1)

[sub_resource type="BoxShape3D" id="BoxShape3D_a0w0v"]
size = Vector3(1, 14.5, 1)

[sub_resource type="GDScript" id="GDScript_oc6vn"]
script/source = "extends Skeleton3D


# Called when the node enters the scene tree for the first time.
func _ready() -> void:
    physical_bones_start_simulation()
"

[sub_resource type="BoxShape3D" id="BoxShape3D_o6vgj"]
size = Vector3(1, 7, 1)

[sub_resource type="BoxMesh" id="BoxMesh_fifn5"]
size = Vector3(1, 7, 1)

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_o6vgj"]

[sub_resource type="Sky" id="Sky_fifn5"]
sky_material = SubResource("ProceduralSkyMaterial_o6vgj")

[sub_resource type="Environment" id="Environment_o6vgj"]
background_mode = 2
sky = SubResource("Sky_fifn5")

[sub_resource type="CameraAttributesPractical" id="CameraAttributesPractical_fifn5"]

[sub_resource type="Compositor" id="Compositor_oc6vn"]

[node name="Node3D" type="Node3D"]
script = SubResource("GDScript_fifn5")

[node name="Arrow" type="MeshInstance3D" parent="."]
unique_name_in_owner = true
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -5.27798, 0, 2.20119)
visible = false
mesh = SubResource("PrismMesh_fifn5")

[node name="Floor" type="StaticBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -22.8512, 0)

[node name="CollisionShape3D" type="CollisionShape3D" parent="Floor"]
shape = SubResource("WorldBoundaryShape3D_ic01r")

[node name="CSGMesh3D" type="CSGMesh3D" parent="Floor"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.016, -0.5, 0)
mesh = SubResource("BoxMesh_o6vgj")

[node name="Stopper" type="StaticBody3D" parent="."]
transform = Transform3D(0.65702, 0.753873, -6.59057e-08, 0.753873, -0.65702, 5.74385e-08, 8.84097e-16, -8.74228e-08, -1, 5.85721, 25.2701, 0)

[node name="CollisionShape3D" type="CollisionShape3D" parent="Stopper"]
shape = SubResource("WorldBoundaryShape3D_ic01r")

[node name="CharacterBody3D" type="CharacterBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2.2336, 1.76545, 0)
visible = false
script = SubResource("GDScript_o6vgj")

[node name="CollisionShape3D" type="CollisionShape3D" parent="CharacterBody3D"]
shape = SubResource("CapsuleShape3D_fifn5")

[node name="Sprite3D" type="Sprite3D" parent="CharacterBody3D"]
texture = ExtResource("1_o6vgj")

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 2.12363, 14.6625, 17.4076)
fov = 97.5

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.99818, 0.0602994, 0, -0.0602994, 0.99818, -2.48546, 7.73394, 4.94233)

[node name="Base (A)" type="StaticBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 5, 0)
physics_material_override = SubResource("PhysicsMaterial_o6vgj")

[node name="CollisionShape3D" type="CollisionShape3D" parent="Base (A)"]
shape = SubResource("BoxShape3D_fifn5")

[node name="CSGMesh3D" type="CSGMesh3D" parent="Base (A)"]
mesh = SubResource("BoxMesh_oc6vn")
material = SubResource("StandardMaterial3D_afxlr")

[node name="B" type="RigidBody3D" parent="."]
transform = Transform3D(0.43218, 0.901787, 0, -0.901787, 0.43218, 0, 0, 0, 1, 2.26396, 2.57417, 1.01775)
physics_material_override = SubResource("PhysicsMaterial_fifn5")
script = SubResource("GDScript_afxlr")
Kp = 200.0

[node name="CSGMesh3D" type="CSGMesh3D" parent="B"]
mesh = SubResource("BoxMesh_sfd0x")

[node name="CollisionShape3D" type="CollisionShape3D" parent="B"]
shape = SubResource("BoxShape3D_h11p4")

[node name="C" type="RigidBody3D" parent="."]
transform = Transform3D(0.43218, 0.901787, 0, -0.901787, 0.43218, 0, 0, 0, 1, 4.55078, 10.6468, 1.01775)
physics_material_override = SubResource("PhysicsMaterial_fifn5")

[node name="CSGMesh3D" type="CSGMesh3D" parent="C"]
mesh = SubResource("BoxMesh_o6dvp")

[node name="CollisionShape3D" type="CollisionShape3D" parent="C"]
shape = SubResource("BoxShape3D_st5u5")

[node name="D" type="RigidBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 4.61049, 9.51755, 0)
physics_material_override = SubResource("PhysicsMaterial_fifn5")

[node name="CSGMesh3D" type="CSGMesh3D" parent="D"]
mesh = SubResource("BoxMesh_afxlr")

[node name="CollisionShape3D" type="CollisionShape3D" parent="D"]
shape = SubResource("BoxShape3D_sfd0x")

[node name="E" type="RigidBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 9.13014, 16.5175, 0)
physics_material_override = SubResource("PhysicsMaterial_fifn5")

[node name="CSGMesh3D" type="CSGMesh3D" parent="E"]
mesh = SubResource("BoxMesh_h11p4")

[node name="CollisionShape3D" type="CollisionShape3D" parent="E"]
shape = SubResource("BoxShape3D_o6dvp")

[node name="F" type="RigidBody3D" parent="."]
transform = Transform3D(0.602526, 0.7981, 0, -0.7981, 0.602526, 0, 0, 0, 1, 10.4272, 19.8252, 1)
physics_material_override = SubResource("PhysicsMaterial_fifn5")

[node name="CSGMesh3D" type="CSGMesh3D" parent="F"]
mesh = SubResource("BoxMesh_st5u5")

[node name="CollisionShape3D" type="CollisionShape3D" parent="F"]
shape = SubResource("BoxShape3D_a0w0v")

[node name="A to B" type="HingeJoint3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.5, 0)
node_a = NodePath("../Base (A)")
node_b = NodePath("../B")

[node name="CSGCylinder3D" type="CSGCylinder3D" parent="A to B"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0)
radius = 0.25

[node name="C to D" type="HingeJoint3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 4.63736, 10.69, 0)
node_a = NodePath("../C")
node_b = NodePath("../D")

[node name="CSGCylinder3D" type="CSGCylinder3D" parent="C to D"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0)
radius = 0.25

[node name="B to D" type="HingeJoint3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 4.53802, 3.63695, 0)
node_a = NodePath("../B")
node_b = NodePath("../D")

[node name="CSGCylinder3D" type="CSGCylinder3D" parent="B to D"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0)
radius = 0.25

[node name="A to C" type="HingeJoint3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 8.5, 0)
node_a = NodePath("../Base (A)")
node_b = NodePath("../C")

[node name="CSGCylinder3D" type="CSGCylinder3D" parent="A to C"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0)
radius = 0.25

[node name="C to E" type="HingeJoint3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 9.05056, 12.8354, 0)
node_a = NodePath("../C")
node_b = NodePath("../E")

[node name="CSGCylinder3D" type="CSGCylinder3D" parent="C to E"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0)
radius = 0.25

[node name="D to F" type="HingeJoint3D" parent="."]
transform = Transform3D(0.817597, 0.57579, 0, -0.57579, 0.817597, 0, 0, 0, 1, 4.62994, 15.4153, 0)
node_a = NodePath("../D")
node_b = NodePath("../F")

[node name="CSGCylinder3D" type="CSGCylinder3D" parent="D to F"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0)
radius = 0.25

[node name="E to F" type="HingeJoint3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 9.1494, 18.7696, 0)
node_a = NodePath("../E")
node_b = NodePath("../F")

[node name="CSGCylinder3D" type="CSGCylinder3D" parent="E to F"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0)
radius = 0.25

[node name="Skeleton3D" type="Skeleton3D" parent="."]
visible = false
script = SubResource("GDScript_oc6vn")

[node name="PhysicalBone3D" type="PhysicalBone3D" parent="Skeleton3D"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Skeleton3D/PhysicalBone3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 3.6077, 0, 0)
shape = SubResource("BoxShape3D_o6vgj")

[node name="CSGMesh3D" type="CSGMesh3D" parent="Skeleton3D/PhysicalBone3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 3.6077, 0, 0)
mesh = SubResource("BoxMesh_fifn5")

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_o6vgj")
camera_attributes = SubResource("CameraAttributesPractical_fifn5")
compositor = SubResource("Compositor_oc6vn")

[node name="HUD" type="CanvasLayer" parent="."]

[node name="Control" type="Control" parent="HUD"]
custom_minimum_size = Vector2(512, 512)
layout_mode = 3
anchors_preset = 0
offset_right = 40.0
offset_bottom = 40.0
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="VBoxContainer" type="VBoxContainer" parent="HUD/Control"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="AngleLabel" type="Label" parent="HUD/Control/VBoxContainer"]
custom_minimum_size = Vector2(20, 20)
layout_mode = 2
text = "angle
"

[node name="HBoxContainer" type="HBoxContainer" parent="HUD/Control/VBoxContainer"]
layout_mode = 2

[node name="Label" type="Label" parent="HUD/Control/VBoxContainer/HBoxContainer"]
layout_mode = 2
text = "Desired angle: "

[node name="Slider" type="HSlider" parent="HUD/Control/VBoxContainer/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
min_value = -90.0
max_value = 90.0

[node name="TargetAngleReadout" type="Label" parent="HUD/Control/VBoxContainer/HBoxContainer"]
layout_mode = 2
text = "0"

[connection signal="value_changed" from="HUD/Control/VBoxContainer/HBoxContainer/Slider" to="." method="_on_desired_angle_changed"]
