[gd_scene load_steps=19 format=3 uid="uid://dv0180t8hngpc"]

[ext_resource type="Texture2D" uid="uid://b17wt83q0xefi" path="res://icon.svg" id="1_o6vgj"]

[sub_resource type="GDScript" id="GDScript_fifn5"]
resource_name = "top_node.gd"
script/source = "extends Node3D

func _unhandled_input(event: InputEvent) -> void:
    if event.is_action_pressed(\"ui_cancel\"):
        get_tree().quit()
"

[sub_resource type="WorldBoundaryShape3D" id="WorldBoundaryShape3D_ic01r"]

[sub_resource type="BoxMesh" id="BoxMesh_o6vgj"]
size = Vector3(20, 1, 20)

[sub_resource type="GDScript" id="GDScript_o6vgj"]
resource_name = "character_body_3d.gd"
script/source = "extends CharacterBody3D


const SPEED = 5.0
const JUMP_VELOCITY = 4.5


func _physics_process(delta: float) -> void:
    # Add the gravity.
    if not is_on_floor():
        velocity += get_gravity() * delta

    # Handle jump.
    if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
        velocity.y = JUMP_VELOCITY

    # Get the input direction and handle the movement/deceleration.
    # As good practice, you should replace UI actions with custom gameplay actions.
    var input_dir := Input.get_vector(\"ui_left\", \"ui_right\", \"ui_up\", \"ui_down\")
    var direction := (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
    if direction:
        velocity.x = direction.x * SPEED
        velocity.z = direction.z * SPEED
    else:
        velocity.x = move_toward(velocity.x, 0, SPEED)
        velocity.z = move_toward(velocity.z, 0, SPEED)

    move_and_slide()
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_fifn5"]

[sub_resource type="PhysicsMaterial" id="PhysicsMaterial_o6vgj"]

[sub_resource type="BoxShape3D" id="BoxShape3D_fifn5"]
size = Vector3(1, 7, 1)

[sub_resource type="BoxMesh" id="BoxMesh_oc6vn"]
size = Vector3(1, 7, 1)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_afxlr"]
albedo_color = Color(0.419813, 0.419813, 0.419813, 1)

[sub_resource type="PhysicsMaterial" id="PhysicsMaterial_fifn5"]

[sub_resource type="BoxMesh" id="BoxMesh_sfd0x"]
size = Vector3(1, 7, 1)

[sub_resource type="BoxShape3D" id="BoxShape3D_h11p4"]
size = Vector3(1, 10, 1)

[sub_resource type="BoxMesh" id="BoxMesh_o6dvp"]
size = Vector3(1, 7, 1)

[sub_resource type="BoxShape3D" id="BoxShape3D_st5u5"]
size = Vector3(1, 10, 1)

[sub_resource type="GDScript" id="GDScript_oc6vn"]
script/source = "extends Skeleton3D


# Called when the node enters the scene tree for the first time.
func _ready() -> void:
    physical_bones_start_simulation()
"

[sub_resource type="BoxShape3D" id="BoxShape3D_o6vgj"]
size = Vector3(1, 7, 1)

[sub_resource type="BoxMesh" id="BoxMesh_fifn5"]
size = Vector3(1, 7, 1)

[node name="Node3D" type="Node3D"]
script = SubResource("GDScript_fifn5")

[node name="Floor" type="StaticBody3D" parent="."]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Floor"]
shape = SubResource("WorldBoundaryShape3D_ic01r")

[node name="CSGMesh3D" type="CSGMesh3D" parent="Floor"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.016, -0.5, 0)
mesh = SubResource("BoxMesh_o6vgj")

[node name="CharacterBody3D" type="CharacterBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2.2336, 1.76545, 0)
script = SubResource("GDScript_o6vgj")

[node name="CollisionShape3D" type="CollisionShape3D" parent="CharacterBody3D"]
shape = SubResource("CapsuleShape3D_fifn5")

[node name="Sprite3D" type="Sprite3D" parent="CharacterBody3D"]
texture = ExtResource("1_o6vgj")

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.849092, 0.528246, 0, -0.528246, 0.849092, 2.12363, 7.8721, 6.97795)

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.99818, 0.0602994, 0, -0.0602994, 0.99818, -2.48546, 7.73394, 4.94233)

[node name="Base (A)" type="StaticBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 3.02294, 4.59196, -0.114039)
physics_material_override = SubResource("PhysicsMaterial_o6vgj")

[node name="CollisionShape3D" type="CollisionShape3D" parent="Base (A)"]
shape = SubResource("BoxShape3D_fifn5")

[node name="CSGMesh3D" type="CSGMesh3D" parent="Base (A)"]
mesh = SubResource("BoxMesh_oc6vn")
material = SubResource("StandardMaterial3D_afxlr")

[node name="B" type="RigidBody3D" parent="."]
transform = Transform3D(0.43218, 0.901787, 0, -0.901787, 0.43218, 0, 0, 0, 1, 5.27491, 3.09071, 1.01775)
physics_material_override = SubResource("PhysicsMaterial_fifn5")

[node name="CSGMesh3D" type="CSGMesh3D" parent="B"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0)
mesh = SubResource("BoxMesh_sfd0x")

[node name="CollisionShape3D" type="CollisionShape3D" parent="B"]
shape = SubResource("BoxShape3D_h11p4")

[node name="C" type="RigidBody3D" parent="."]
transform = Transform3D(0.43218, 0.901787, 0, -0.901787, 0.43218, 0, 0, 0, 1, 5.27491, 3.09071, 1.01775)
physics_material_override = SubResource("PhysicsMaterial_fifn5")

[node name="CSGMesh3D" type="CSGMesh3D" parent="C"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0)
mesh = SubResource("BoxMesh_o6dvp")

[node name="CollisionShape3D" type="CollisionShape3D" parent="C"]
shape = SubResource("BoxShape3D_st5u5")

[node name="A to B" type="HingeJoint3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 3, 2, 0)
node_a = NodePath("../Base (A)")
node_b = NodePath("../B")

[node name="CSGCylinder3D" type="CSGCylinder3D" parent="A to B"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0)
radius = 0.25

[node name="A to C" type="HingeJoint3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 3.02289, 7.11835, 0)
node_a = NodePath("../Base (A)")
node_b = NodePath("../B")

[node name="CSGCylinder3D" type="CSGCylinder3D" parent="A to C"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0)
radius = 0.25

[node name="Skeleton3D" type="Skeleton3D" parent="."]
visible = false
script = SubResource("GDScript_oc6vn")

[node name="PhysicalBone3D" type="PhysicalBone3D" parent="Skeleton3D"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Skeleton3D/PhysicalBone3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 3.6077, 0, 0)
shape = SubResource("BoxShape3D_o6vgj")

[node name="CSGMesh3D" type="CSGMesh3D" parent="Skeleton3D/PhysicalBone3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 3.6077, 0, 0)
mesh = SubResource("BoxMesh_fifn5")
